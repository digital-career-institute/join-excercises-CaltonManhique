-- northwind db

-- 1. Select all product names for suppliers from USA. 
select p.product_name
from suppliers s  join products p on s.supplier_id = p.supplier_id;

-- 2. Select order id, order date, employee first and last name for
-- employee whose last name starts with 'D' and for order that was shipped to Germany.
Select o.order_id, o.order_date, e.first_name, e.last_name
from employees e left join orders o on e.employee_id = o.employee_id
where e.last_name like 'D%' and o.ship_country = 'Germany';

-- 3. Select all orders shipped by United Package for orders sooner than '1996-08-12'
select * 
from orders o right join shippers s on o.ship_via = s.shipper_id
where s.shipper_id = 2 and order_date < '1996-08-12';

-- 4. Select shippers company name that doesn't have any orders assigned.
select s.company_name 
from shippers s left join orders o on o.ship_via = s.shipper_id
where s.shipper_id not in (select ship_via from orders where s.shipper_id = orders.ship_via);

-- 5. Select order ids that contains product from category 'Beverages' ordered '1996-08-14'.
select o.order_id, o.customer_id, o.ship_name
from ((categories c left join products p on c.category_id = p.category_id)
	  join order_details od on od.product_id = p.product_id
	  join orders o on od.order_id = o.order_id)
where c.category_id = 1 and order_date = '1996-08-14';

-- 6. Select product names and availability of products supplied by 'Lyngbysild' from category 'Seafood'
select p.product_name, p.units_in_stock
from ((categories c left join products p on c.category_id = p.category_id) 
	   join suppliers s on p.supplier_id = s.supplier_id)
where s.company_name = 'Lyngbysild' and c.category_name = 'Seafood';

-- 7. Select last names of employees assigned to 'Northern' region.
select distinct last_name
from (((employees e join employee_territories et on e.employee_id = et.employee_id)
	  join territories t on et.territory_id = t.territory_id)
	  join region r on t.region_id = r.region_id)	  
where r.region_description = 'Northern';

-- 8. Select employee id and his boss last name for those who have orders with date later than '1996-07-18'.
-- if an employee doesn't have a boss don't include him.
select * from employees

-- 9. List the employees in the warehouse with orders that are not shipped yet.
select distinct e.first_name, e.last_name
from employees e right join orders o on e.employee_id = o.employee_id
where o.shipped_date is null;

-- 10. Calculate the price for each product with its name in each order after discount is applied.
select p.product_name, ((od.unit_price * od.quantity) - od.discount*(od.unit_price * od.quantity)) as total_price
from products p join order_details od on p.product_id = od.product_id;